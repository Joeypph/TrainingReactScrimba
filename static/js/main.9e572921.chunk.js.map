{"version":3,"sources":["components/Conditional.js","App.js","reportWebVitals.js","index.js"],"names":["Conditional","App","state","isLoggedIn","handleClick","bind","this","setState","prevState","buttonText","displayText","onClick","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6RASeA,IC4CAC,E,kDA3BX,aAAc,IAAD,8BACT,gBACKC,MAAM,CACPC,YAAY,GAEhB,EAAKC,YAAY,EAAKA,YAAYC,KAAjB,gBALR,E,+CAOb,WACIC,KAAKC,UAAS,SAAAC,GACV,MAAM,CACFL,YAAaK,EAAUL,iB,oBAInC,WACI,IAAIM,EAAYH,KAAKJ,MAAMC,WAAa,WAAa,SACjDO,EAAaJ,KAAKJ,MAAMC,WAAa,eAAiB,iBAC1D,OACI,gCACI,wBAAQQ,QAASL,KAAKF,YAAtB,SAAoCK,IACpC,6BAAKC,W,GArBHE,IAAMC,WCbTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCMdQ,IAASC,OAAO,cAAC,IAAMC,WAAP,UAAkB,cAAC,EAAD,MAA2BC,SAASC,eAAe,SASrFb,M","file":"static/js/main.9e572921.chunk.js","sourcesContent":["import React from \"react\"\r\n\r\nfunction Conditional(props) {\r\n    return(\r\n        <div>\r\n            <h1>Some cool stuff about conditional component </h1>\r\n        </div>\r\n    )\r\n}\r\nexport default Conditional","import './App.css';\n\nimport React from \"react\"\nimport randomColor from \"randomcolor\"\nimport Conditional from \"./components/Conditional\"\nimport { render } from '@testing-library/react';\n\n\n\n/*\nChallenge:\n\nGiven a stateless functional component:\n1. Follow the steps necessary to add state to it,\n        //create based componet\n        //constructor method\n2. Have state keep track of whether the user is logged in or not\n        //boolean isLoggedIn: False\n3. Add a button that logs the user in/out\n        //event listener (onClick)\n    a. extra challenge - make the button display \"log in\" if they're not logged in and \"log out\" if they are\n    COnditional rendering\n4. Display text that says \"Logged in\" if the user is logged in, or \"Logged out\" if they're not.\n*/\n\nclass App extends React.Component{\n    constructor(){\n        super()\n        this.state={\n            isLoggedIn: false\n        }\n        this.handleClick=this.handleClick.bind(this)\n    }\n    handleClick(){\n        this.setState(prevState=>{\n            return{\n                isLoggedIn: !prevState.isLoggedIn\n            }\n        })\n    }\n    render(){\n        let buttonText= this.state.isLoggedIn ? \" LOG OUT\" : \"LOG IN\"\n        let displayText= this.state.isLoggedIn ? \" You are Log\" : \"You logged out\"\n        return(\n            <div>\n                <button onClick={this.handleClick}>{buttonText}</button>\n                <h1>{displayText}</h1>\n            </div>\n        )\n    }\n}\n\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\n// From scratch, initialize the React app\n// Render an <App /> component\n// Create the <App /> component from scratch\n// Have the <App /> component render 3 or 4 checkboxes with paragraphs or spans next to it\n// like you're making a todo list with some hard-coded items on it\n\nReactDOM.render(<React.StrictMode><App /></React.StrictMode>,document.getElementById('root'));\n\n\n\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}